const express = require('express');
const axios = require('axios');
const app = express();

app.use(express.json());

app.post('/api/predictions', async (req, res) => {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method Not Allowed' });
  }

  const { prompt } = req.body;
  if (!prompt) {
    return res.status(400).json({ error: 'Prompt is required' });
  }

  const apiKey = process.env.REPLICATE_API_TOKEN;
  if (!apiKey) {
    return res.status(500).json({ error: 'Missing Replicate API key' });
  }

  try {
    const initialResponse = await axios.post(
      'https://api.replicate.com/v1/predictions',
      {
        version: '8abccf52e8cba9f4e1abc866a3cf12352a9e30de0a619fe42426ccef4f840c74',
        input: { prompt },
      },
      {
        headers: {
          Authorization: `Token ${apiKey}`,
          'Content-Type': 'application/json',
        },
      }
    );

    const predictionId = initialResponse.data.id;
    if (!predictionId) {
      throw new Error('No prediction ID returned');
    }

    let result;
    while (true) {
      const statusResponse = await axios.get(
        `https://api.replicate.com/v1/predictions/${predictionId}`,
        {
          headers: {
            Authorization: `Token ${apiKey}`,
          },
        }
      );

      result = statusResponse.data;
      if (result.status === 'succeeded') {
        break;
      } else if (result.status === 'failed' || result.status === 'canceled') {
        throw new Error(`Prediction ${result.status}: ${result.error || 'Unknown error'}`);
      }
      await new Promise((resolve) => setTimeout(resolve, 2000));
    }

    if (!result.output || !result.output[0]) {
      throw new Error('No image URL returned');
    }

    res.status(200).json({
      imageUrl: result.output[0],
      prompt,
    });
  } catch (error) {
    console.error('Prediction error:', error.message, error.response?.data);
    res.status(500).json({ error: `Failed to generate prediction: ${error.message}` });
  }
});

app.listen(3001, () => console.log('Server running on http://localhost:3001'));
